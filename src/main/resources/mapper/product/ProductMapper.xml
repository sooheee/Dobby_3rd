<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.dobby.project.ProductMapper">

    <!--상품 목록페이지에서 상품 개수 세기 -->
    <select id="countProducts" parameterType="int" resultType="int">
        SELECT count(*)
        FROM PROD
        WHERE CATE_CD = #{CATE_CD}
    </select>


    <!-- 메인 화면에 진열되는 상품 8개-->
    <select id="getMainProducts" resultType="ProductDto">
        SELECT *
        FROM PROD
        WHERE MAI_YN = 'Y'
        ORDER BY PROD_NM LIMIT 8
    </select>

    <!--상품 할인이 됐을때 안됐을때 가격 불러오기-->
    <select id="Products_DC" resultType="ProductDCDto">
        SELECT P.PROD_ID,
               P.PROD_NM,
               P.AMT,
               PD.DC_TYP,
               PD.DC_RATE,
               PD.DC_AMT,
               (CASE
                    WHEN PD.DC_TYP = 'percentage' THEN P.AMT * (1 - PD.DC_RATE / 100)
                    WHEN PD.DC_TYP = 'fixed' THEN P.AMT - PD.DC_AMT
                    ELSE P.AMT
                   END) AS dc_price
        FROM Prod AS P
                 LEFT JOIN
             Prod_DC AS PD
             ON
                 P.PROD_ID = PD.PROD_ID
        WHERE P.DC_YN = 'Y';
    </select>


    <select id="Cate_Products_DC" resultType="SortDto">
        SELECT P.PROD_ID,
               P.PROD_NM,
               P.AMT,
               PD.DC_TYP,
               PD.DC_RATE,
               PD.DC_AMT,
               (CASE
                    WHEN PD.DC_TYP = 'percentage' THEN P.AMT * (1 - PD.DC_RATE / 100)
                    WHEN PD.DC_TYP = 'fixed' THEN P.AMT - PD.DC_AMT
                    ELSE P.AMT
                   END) AS dc_price
        FROM Prod AS P
                 LEFT JOIN
             Prod_DC AS PD
             ON
                 P.PROD_ID = PD.PROD_ID
        WHERE P.DC_YN = 'Y';
    </select>

    <!-- 상품 아이디로 상품 상세 불러오기 -->
    <select id="getProductById" parameterType="int" resultType="ProductDto">
        SELECT *
        FROM PROD
        WHERE PROD_ID = #{PROD_ID}
    </select>

    <!--해당 카테고리의 상품 목록 불러오기 -->
    <select id="getProductList" parameterType="int" resultType="ProductCateDto">
        SELECT C.CATE_NM, C.CATE_DESC, C.CATE_REP_IMG, P.*
        FROM PROD P,
             CATE C
        WHERE P.CATE_CD = C.CATE_CD
          AND P.CATE_CD = #{CATE_CD}
        ORDER BY P.REG_DTM
    </select>

    <!--상품 상세이미지 불러오기-->
    <select id="getDetailImage" parameterType="int" resultType="ProductFileDto">
        SELECT FILE_PATH
        FROM FILE
        WHERE PROD_ID= #{PROD_ID} AND KIND ="상세";
    </select>



    <!--카테고리별 상품 목록페이지 정렬 버튼 구현 -->
    <select id="getProductsByCategoryAndSort" parameterType="map" resultType="SortDto">
        SELECT P.*,
        PD.DC_RATE,
        PD.DC_TYP,
        (CASE
        WHEN PD.DC_TYP = 'percentage' THEN P.AMT * (1 - PD.DC_RATE / 100)
        WHEN PD.DC_TYP = 'fixed' THEN P.AMT - PD.DC_AMT
        ELSE P.AMT
        END) AS dc_price
        FROM PROD P
        LEFT JOIN Prod_DC AS PD
        ON P.PROD_ID = PD.PROD_ID
        WHERE P.CATE_CD = #{category}
        ORDER BY
        <choose>
            <when test="sort == 'latest'">P.REG_DTM DESC</when>
            <when test="sort == 'highest_price'">dc_price DESC</when>
            <when test="sort == 'lowest_price'">dc_price ASC</when>
        </choose>
    </select>


    <!--관리자 페이지-->

    <!--관리자 상품목록 전체 상품 개수-->
    <select id="count" resultType="int">
        SELECT count(*)
        FROM PROD
    </select>

    <!--관리자 상품목록 전체 상품 조회-->
    <select id="selectPage" parameterType="map" resultType="ProductCateDto">
        SELECT C.CATE_NM, P.*
        FROM PROD P,
             CATE C
        WHERE P.CATE_CD = C.CATE_CD
        ORDER BY PROD_ID DESC
            LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 관리자 상품 읽기 상품 아이디로 -->
    <select id="getAdminProductsById" parameterType="int" resultType="TotalDto">
        SELECT P.*, F.*, PD.*
        FROM PROD P
                 LEFT JOIN FILE F ON P.PROD_ID = F.PROD_ID
                 LEFT JOIN PROD_DC PD ON P.PROD_ID = PD.PROD_ID
        WHERE P.PROD_ID = #{PROD_ID}
    </select>


    <!-- 관리자 페이지 상품 삭제-->

    <delete id="deleteProductFinal" parameterType="int">
        DELETE
        FROM PROD
        WHERE PROD_ID = #{id};
    </delete>


    <delete id="deleteProductHashtag" parameterType="int">
        DELETE
        FROM PROD_HASHTAG
        WHERE PROD_ID = #{id};
    </delete>
    <delete id="deleteProductOpt" parameterType="int">
        DELETE
        FROM PROD_OPT
        WHERE PROD_ID = #{id};
    </delete>
    <delete id="deleteProductDc" parameterType="int">
        DELETE
        FROM PROD_DC
        WHERE PROD_ID = #{id};
    </delete>
    <delete id="deleteFile" parameterType="int">

        DELETE
        FROM FILE
        WHERE PROD_ID = #{id};
    </delete>




    <!-- 관리자 상품 등록-->


    <insert id="insertProduct"  parameterType="TotalDto" keyProperty="PROD_ID" keyColumn="PROD_ID" useGeneratedKeys="true">
        INSERT INTO PROD
        (PROD_ID, CATE_CD, PROD_NM, PROD_DESC, AMT,  REP_IMG,  PROD_STUS,
          DC_YN, MAI_YN)
        VALUES
            (#{PROD_ID}, #{CATE_CD}, #{PROD_NM}, #{PROD_DESC}, #{AMT},  #{REP_IMG},
            #{PROD_STUS},  #{DC_YN}, #{MAI_YN});
    </insert>
    <insert id="insertDetailFile" parameterType="TotalDto">
        INSERT INTO FILE
            (PROD_ID, FILE_PATH)
        VALUES ( #{PROD_ID}, #{FILE_PATH});
    </insert>

    <insert id="insertDiscount" parameterType="TotalDto">
         INSERT INTO PROD_DC
             ( PROD_ID, DC_RATE)
             VALUES
            (#{PROD_ID}, #{DC_RATE});
    </insert>

    <!--이미지 주소 얻어오기-->
    <select id="getImgPath"  parameterType="int" resultType="String">
        SELECT REP_IMG
        FROM PROD
        WHERE PROD_ID=#{PROD_ID}
    </select>
    <select id="getDetailImgPath"  parameterType="int" resultType="String">
        SELECT FILE_PATH
        FROM FILE
        WHERE PROD_ID=#{PROD_ID}
    </select>


    <!--관리자 상품 수정 업데이트 -->

    <update id="updateProduct" parameterType="TotalDto" keyProperty="PROD_ID" keyColumn="PROD_ID" useGeneratedKeys="true">
        UPDATE PROD
        SET CATE_CD = #{CATE_CD}, PROD_NM = #{PROD_NM}, PROD_DESC = #{PROD_DESC}, AMT = #{AMT},
             NEW_YN = #{NEW_YN}, PROD_STUS = #{PROD_STUS},
            DC_YN = #{DC_YN}, MAI_YN = #{MAI_YN}
        WHERE PROD_ID = #{PROD_ID};
    </update>
    <update id="updateDiscount" parameterType="TotalDto">
        UPDATE PROD_DC SET
            DC_RATE = #{DC_RATE}
        WHERE PROD_ID = #{PROD_ID};
    </update>




</mapper>